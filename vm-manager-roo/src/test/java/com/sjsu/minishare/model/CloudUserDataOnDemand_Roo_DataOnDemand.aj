// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.sjsu.minishare.model;

import com.sjsu.minishare.model.CloudUser;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.security.SecureRandom;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.Random;
import javax.validation.ConstraintViolation;
import javax.validation.ConstraintViolationException;
import org.springframework.stereotype.Component;

privileged aspect CloudUserDataOnDemand_Roo_DataOnDemand {
    
    declare @type: CloudUserDataOnDemand: @Component;
    
    private Random CloudUserDataOnDemand.rnd = new SecureRandom();
    
    private List<CloudUser> CloudUserDataOnDemand.data;
    
    public CloudUser CloudUserDataOnDemand.getNewTransientCloudUser(int index) {
        CloudUser obj = new CloudUser();
        setActive(obj, index);
        setAddressLine1(obj, index);
        setAddressLine2(obj, index);
        setCardCvvNumber(obj, index);
        setCardExpirationMonth(obj, index);
        setCardExpirationYear(obj, index);
        setCardNumber(obj, index);
        setCity(obj, index);
        setCountry(obj, index);
        setFirstName(obj, index);
        setLastName(obj, index);
        setPassword(obj, index);
        setUserName(obj, index);
        setUserState(obj, index);
        setZip(obj, index);
        return obj;
    }
    
    public void CloudUserDataOnDemand.setActive(CloudUser obj, int index) {
        Boolean active = Boolean.TRUE;
        obj.setActive(active);
    }
    
    public void CloudUserDataOnDemand.setAddressLine1(CloudUser obj, int index) {
        String addressLine1 = "addressLine1_" + index;
        obj.setAddressLine1(addressLine1);
    }
    
    public void CloudUserDataOnDemand.setAddressLine2(CloudUser obj, int index) {
        String addressLine2 = "addressLine2_" + index;
        obj.setAddressLine2(addressLine2);
    }
    
    public void CloudUserDataOnDemand.setCardCvvNumber(CloudUser obj, int index) {
        Integer cardCvvNumber = new Integer(index);
        obj.setCardCvvNumber(cardCvvNumber);
    }
    
    public void CloudUserDataOnDemand.setCardExpirationMonth(CloudUser obj, int index) {
        Integer cardExpirationMonth = new Integer(index);
        obj.setCardExpirationMonth(cardExpirationMonth);
    }
    
    public void CloudUserDataOnDemand.setCardExpirationYear(CloudUser obj, int index) {
        Integer cardExpirationYear = new Integer(index);
        obj.setCardExpirationYear(cardExpirationYear);
    }
    
    public void CloudUserDataOnDemand.setCardNumber(CloudUser obj, int index) {
        String cardNumber = "cardNumber_" + index;
        obj.setCardNumber(cardNumber);
    }
    
    public void CloudUserDataOnDemand.setCity(CloudUser obj, int index) {
        String city = "city_" + index;
        obj.setCity(city);
    }
    
    public void CloudUserDataOnDemand.setCountry(CloudUser obj, int index) {
        String country = "country_" + index;
        obj.setCountry(country);
    }
    
    public void CloudUserDataOnDemand.setFirstName(CloudUser obj, int index) {
        String firstName = "firstName_" + index;
        obj.setFirstName(firstName);
    }
    
    public void CloudUserDataOnDemand.setLastName(CloudUser obj, int index) {
        String lastName = "lastName_" + index;
        obj.setLastName(lastName);
    }
    
    public void CloudUserDataOnDemand.setPassword(CloudUser obj, int index) {
        String password = "password_" + index;
        obj.setPassword(password);
    }
    
    public void CloudUserDataOnDemand.setUserName(CloudUser obj, int index) {
        String userName = "userName_" + index;
        obj.setUserName(userName);
    }
    
    public void CloudUserDataOnDemand.setUserState(CloudUser obj, int index) {
        String userState = "userState_" + index;
        obj.setUserState(userState);
    }
    
    public void CloudUserDataOnDemand.setZip(CloudUser obj, int index) {
        String zip = "zip_" + index;
        obj.setZip(zip);
    }
    
    public CloudUser CloudUserDataOnDemand.getSpecificCloudUser(int index) {
        init();
        if (index < 0) index = 0;
        if (index > (data.size() - 1)) index = data.size() - 1;
        CloudUser obj = data.get(index);
        return CloudUser.findCloudUser(obj.getUserId());
    }
    
    public CloudUser CloudUserDataOnDemand.getRandomCloudUser() {
        init();
        CloudUser obj = data.get(rnd.nextInt(data.size()));
        return CloudUser.findCloudUser(obj.getUserId());
    }
    
    public boolean CloudUserDataOnDemand.modifyCloudUser(CloudUser obj) {
        return false;
    }
    
    public void CloudUserDataOnDemand.init() {
        data = CloudUser.findCloudUserEntries(0, 10);
        if (data == null) throw new IllegalStateException("Find entries implementation for 'CloudUser' illegally returned null");
        if (!data.isEmpty()) {
            return;
        }
        
        data = new ArrayList<com.sjsu.minishare.model.CloudUser>();
        for (int i = 0; i < 10; i++) {
            CloudUser obj = getNewTransientCloudUser(i);
            try {
                obj.persist();
            } catch (ConstraintViolationException e) {
                StringBuilder msg = new StringBuilder();
                for (Iterator<ConstraintViolation<?>> it = e.getConstraintViolations().iterator(); it.hasNext();) {
                    ConstraintViolation<?> cv = it.next();
                    msg.append("[").append(cv.getConstraintDescriptor()).append(":").append(cv.getMessage()).append("=").append(cv.getInvalidValue()).append("]");
                }
                throw new RuntimeException(msg.toString(), e);
            }
            obj.flush();
            data.add(obj);
        }
    }
    
}
