// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.sjsu.minishare.web;

import com.sjsu.minishare.model.CloudUser;
import com.sjsu.minishare.model.VirtualMachineDetail;
import java.io.UnsupportedEncodingException;
import java.lang.Integer;
import java.lang.String;
import java.util.Collection;
import javax.servlet.http.HttpServletRequest;
import org.joda.time.format.DateTimeFormat;
import org.springframework.context.i18n.LocaleContextHolder;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.util.UriUtils;
import org.springframework.web.util.WebUtils;
import com.sjsu.minishare.util.ApplicationUtil;
import com.sjsu.minishare.util.VirtualMachineConstants;

privileged aspect VirtualMachineDetailController_Roo_Controller {
    
    @RequestMapping(method = RequestMethod.GET)
    public String VirtualMachineDetailController.list(@RequestParam(value = "page", required = false) Integer page, @RequestParam(value = "size", required = false) Integer size, Model uiModel) {
        String userName = ApplicationUtil.getLogonUsername();
        if (page != null || size != null) {
            int sizeNo = size == null ? 10 : size.intValue();
            uiModel.addAttribute("virtualmachinedetails", VirtualMachineDetail.findVirtualMachineDetailEntries(userName, page == null ? 0 : (page.intValue() - 1) * sizeNo, sizeNo));
            float nrOfPages = (float) VirtualMachineDetail.countVirtualMachineDetails() / sizeNo;
            uiModel.addAttribute("maxPages", (int) ((nrOfPages > (int) nrOfPages || nrOfPages == 0.0) ? nrOfPages + 1 : nrOfPages));
        } else {
            uiModel.addAttribute("virtualmachinedetails", VirtualMachineDetail.findAllVirtualMachineDetails(userName));
        }
        addDateTimeFormatPatterns(uiModel);
        return "virtualmachinedetails/list";
    }
    
    @RequestMapping(value = "/{machineId}", params = "form", method = RequestMethod.GET)
    public String VirtualMachineDetailController.updateForm(@PathVariable("machineId") Integer machineId, Model uiModel) {
        uiModel.addAttribute("virtualMachineDetail", VirtualMachineDetail.findVirtualMachineDetail(machineId));
        uiModel.addAttribute("numCPUs", VirtualMachineConstants.getCPUNums());
   		  uiModel.addAttribute("memories", VirtualMachineConstants.getMemories());
        addDateTimeFormatPatterns(uiModel);
        return "virtualmachinedetails/update";
    }
    
    @ModelAttribute("cloudusers")
    public Collection<CloudUser> VirtualMachineDetailController.populateCloudUsers() {
        return CloudUser.findAllCloudUsers();
    }
    
    @ModelAttribute("virtualmachinedetails")
    public Collection<VirtualMachineDetail> VirtualMachineDetailController.populateVirtualMachineDetails() {
        return VirtualMachineDetail.findAllVirtualMachineDetails();
    }
    
    void VirtualMachineDetailController.addDateTimeFormatPatterns(Model uiModel) {
        uiModel.addAttribute("virtualMachineDetail_lastlogin_date_format", DateTimeFormat.patternForStyle("M-", LocaleContextHolder.getLocale()));
        uiModel.addAttribute("virtualMachineDetail_lastlogout_date_format", DateTimeFormat.patternForStyle("M-", LocaleContextHolder.getLocale()));
    }
    
    String VirtualMachineDetailController.encodeUrlPathSegment(String pathSegment, HttpServletRequest httpServletRequest) {
        String enc = httpServletRequest.getCharacterEncoding();
        if (enc == null) {
            enc = WebUtils.DEFAULT_CHARACTER_ENCODING;
        }
        try {
            pathSegment = UriUtils.encodePathSegment(pathSegment, enc);
        }
        catch (UnsupportedEncodingException uee) {}
        return pathSegment;
    }
    
}
